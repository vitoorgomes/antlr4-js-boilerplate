// Generated from Exp.g4 by ANTLR 4.9.1
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002 \u00bd\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0003\u0002\u0003\u0002\u0007\u0002B\n",
    "\u0002\f\u0002\u000e\u0002E\u000b\u0002\u0003\u0002\u0003\u0002\u0003",
    "\u0003\u0006\u0003J\n\u0003\r\u0003\u000e\u0003K\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010",
    "\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0012",
    "\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0014\u0003\u0015",
    "\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017",
    "\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0017\u0003\u0018",
    "\u0003\u0018\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019",
    "\u0003\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a",
    "\u0003\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c",
    "\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001d\u0006\u001d",
    "\u00ac\n\u001d\r\u001d\u000e\u001d\u00ad\u0003\u001e\u0006\u001e\u00b1",
    "\n\u001e\r\u001e\u000e\u001e\u00b2\u0003\u001f\u0003\u001f\u0007\u001f",
    "\u00b7\n\u001f\f\u001f\u000e\u001f\u00ba\u000b\u001f\u0003\u001f\u0003",
    "\u001f\u0002\u0002 \u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b",
    "\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b",
    "\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+",
    "\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d9\u001e;\u001f= \u0003",
    "\u0002\u0005\u0003\u0002\f\f\u0005\u0002\u000b\f\u000f\u000f\"\"\u0003",
    "\u0002$$\u0002\u00c1\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
    "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
    "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
    "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u0002",
    "7\u0003\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002\u0002;\u0003",
    "\u0002\u0002\u0002\u0002=\u0003\u0002\u0002\u0002\u0003?\u0003\u0002",
    "\u0002\u0002\u0005I\u0003\u0002\u0002\u0002\u0007O\u0003\u0002\u0002",
    "\u0002\tQ\u0003\u0002\u0002\u0002\u000bS\u0003\u0002\u0002\u0002\rU",
    "\u0003\u0002\u0002\u0002\u000fW\u0003\u0002\u0002\u0002\u0011Y\u0003",
    "\u0002\u0002\u0002\u0013[\u0003\u0002\u0002\u0002\u0015]\u0003\u0002",
    "\u0002\u0002\u0017_\u0003\u0002\u0002\u0002\u0019a\u0003\u0002\u0002",
    "\u0002\u001bc\u0003\u0002\u0002\u0002\u001de\u0003\u0002\u0002\u0002",
    "\u001fh\u0003\u0002\u0002\u0002!k\u0003\u0002\u0002\u0002#m\u0003\u0002",
    "\u0002\u0002%p\u0003\u0002\u0002\u0002\'r\u0003\u0002\u0002\u0002)u",
    "\u0003\u0002\u0002\u0002+{\u0003\u0002\u0002\u0002-\u0084\u0003\u0002",
    "\u0002\u0002/\u008d\u0003\u0002\u0002\u00021\u0090\u0003\u0002\u0002",
    "\u00023\u0095\u0003\u0002\u0002\u00025\u009b\u0003\u0002\u0002\u0002",
    "7\u00a1\u0003\u0002\u0002\u00029\u00ab\u0003\u0002\u0002\u0002;\u00b0",
    "\u0003\u0002\u0002\u0002=\u00b4\u0003\u0002\u0002\u0002?C\u0007%\u0002",
    "\u0002@B\n\u0002\u0002\u0002A@\u0003\u0002\u0002\u0002BE\u0003\u0002",
    "\u0002\u0002CA\u0003\u0002\u0002\u0002CD\u0003\u0002\u0002\u0002DF\u0003",
    "\u0002\u0002\u0002EC\u0003\u0002\u0002\u0002FG\b\u0002\u0002\u0002G",
    "\u0004\u0003\u0002\u0002\u0002HJ\t\u0003\u0002\u0002IH\u0003\u0002\u0002",
    "\u0002JK\u0003\u0002\u0002\u0002KI\u0003\u0002\u0002\u0002KL\u0003\u0002",
    "\u0002\u0002LM\u0003\u0002\u0002\u0002MN\b\u0003\u0002\u0002N\u0006",
    "\u0003\u0002\u0002\u0002OP\u0007-\u0002\u0002P\b\u0003\u0002\u0002\u0002",
    "QR\u0007/\u0002\u0002R\n\u0003\u0002\u0002\u0002ST\u0007,\u0002\u0002",
    "T\f\u0003\u0002\u0002\u0002UV\u00071\u0002\u0002V\u000e\u0003\u0002",
    "\u0002\u0002WX\u0007\'\u0002\u0002X\u0010\u0003\u0002\u0002\u0002YZ",
    "\u0007*\u0002\u0002Z\u0012\u0003\u0002\u0002\u0002[\\\u0007+\u0002\u0002",
    "\\\u0014\u0003\u0002\u0002\u0002]^\u0007?\u0002\u0002^\u0016\u0003\u0002",
    "\u0002\u0002_`\u0007.\u0002\u0002`\u0018\u0003\u0002\u0002\u0002ab\u0007",
    "}\u0002\u0002b\u001a\u0003\u0002\u0002\u0002cd\u0007\u007f\u0002\u0002",
    "d\u001c\u0003\u0002\u0002\u0002ef\u0007?\u0002\u0002fg\u0007?\u0002",
    "\u0002g\u001e\u0003\u0002\u0002\u0002hi\u0007#\u0002\u0002ij\u0007?",
    "\u0002\u0002j \u0003\u0002\u0002\u0002kl\u0007@\u0002\u0002l\"\u0003",
    "\u0002\u0002\u0002mn\u0007@\u0002\u0002no\u0007?\u0002\u0002o$\u0003",
    "\u0002\u0002\u0002pq\u0007>\u0002\u0002q&\u0003\u0002\u0002\u0002rs",
    "\u0007>\u0002\u0002st\u0007?\u0002\u0002t(\u0003\u0002\u0002\u0002u",
    "v\u0007r\u0002\u0002vw\u0007t\u0002\u0002wx\u0007k\u0002\u0002xy\u0007",
    "p\u0002\u0002yz\u0007v\u0002\u0002z*\u0003\u0002\u0002\u0002{|\u0007",
    "t\u0002\u0002|}\u0007g\u0002\u0002}~\u0007c\u0002\u0002~\u007f\u0007",
    "f\u0002\u0002\u007f\u0080\u0007a\u0002\u0002\u0080\u0081\u0007k\u0002",
    "\u0002\u0081\u0082\u0007p\u0002\u0002\u0082\u0083\u0007v\u0002\u0002",
    "\u0083,\u0003\u0002\u0002\u0002\u0084\u0085\u0007t\u0002\u0002\u0085",
    "\u0086\u0007g\u0002\u0002\u0086\u0087\u0007c\u0002\u0002\u0087\u0088",
    "\u0007f\u0002\u0002\u0088\u0089\u0007a\u0002\u0002\u0089\u008a\u0007",
    "u\u0002\u0002\u008a\u008b\u0007v\u0002\u0002\u008b\u008c\u0007t\u0002",
    "\u0002\u008c.\u0003\u0002\u0002\u0002\u008d\u008e\u0007k\u0002\u0002",
    "\u008e\u008f\u0007h\u0002\u0002\u008f0\u0003\u0002\u0002\u0002\u0090",
    "\u0091\u0007g\u0002\u0002\u0091\u0092\u0007n\u0002\u0002\u0092\u0093",
    "\u0007u\u0002\u0002\u0093\u0094\u0007g\u0002\u0002\u00942\u0003\u0002",
    "\u0002\u0002\u0095\u0096\u0007y\u0002\u0002\u0096\u0097\u0007j\u0002",
    "\u0002\u0097\u0098\u0007k\u0002\u0002\u0098\u0099\u0007n\u0002\u0002",
    "\u0099\u009a\u0007g\u0002\u0002\u009a4\u0003\u0002\u0002\u0002\u009b",
    "\u009c\u0007d\u0002\u0002\u009c\u009d\u0007t\u0002\u0002\u009d\u009e",
    "\u0007g\u0002\u0002\u009e\u009f\u0007c\u0002\u0002\u009f\u00a0\u0007",
    "m\u0002\u0002\u00a06\u0003\u0002\u0002\u0002\u00a1\u00a2\u0007e\u0002",
    "\u0002\u00a2\u00a3\u0007q\u0002\u0002\u00a3\u00a4\u0007p\u0002\u0002",
    "\u00a4\u00a5\u0007v\u0002\u0002\u00a5\u00a6\u0007k\u0002\u0002\u00a6",
    "\u00a7\u0007p\u0002\u0002\u00a7\u00a8\u0007w\u0002\u0002\u00a8\u00a9",
    "\u0007g\u0002\u0002\u00a98\u0003\u0002\u0002\u0002\u00aa\u00ac\u0004",
    "2;\u0002\u00ab\u00aa\u0003\u0002\u0002\u0002\u00ac\u00ad\u0003\u0002",
    "\u0002\u0002\u00ad\u00ab\u0003\u0002\u0002\u0002\u00ad\u00ae\u0003\u0002",
    "\u0002\u0002\u00ae:\u0003\u0002\u0002\u0002\u00af\u00b1\u0004c|\u0002",
    "\u00b0\u00af\u0003\u0002\u0002\u0002\u00b1\u00b2\u0003\u0002\u0002\u0002",
    "\u00b2\u00b0\u0003\u0002\u0002\u0002\u00b2\u00b3\u0003\u0002\u0002\u0002",
    "\u00b3<\u0003\u0002\u0002\u0002\u00b4\u00b8\u0007$\u0002\u0002\u00b5",
    "\u00b7\n\u0004\u0002\u0002\u00b6\u00b5\u0003\u0002\u0002\u0002\u00b7",
    "\u00ba\u0003\u0002\u0002\u0002\u00b8\u00b6\u0003\u0002\u0002\u0002\u00b8",
    "\u00b9\u0003\u0002\u0002\u0002\u00b9\u00bb\u0003\u0002\u0002\u0002\u00ba",
    "\u00b8\u0003\u0002\u0002\u0002\u00bb\u00bc\u0007$\u0002\u0002\u00bc",
    ">\u0003\u0002\u0002\u0002\b\u0002CK\u00ad\u00b2\u00b8\u0003\b\u0002",
    "\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ExpLexer extends antlr4.Lexer {

    static grammarFileName = "Exp.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'+'", "'-'", "'*'", "'/'", "'%'", 
                         "'('", "')'", "'='", "','", "'{'", "'}'", "'=='", 
                         "'!='", "'>'", "'>='", "'<'", "'<='", "'print'", 
                         "'read_int'", "'read_str'", "'if'", "'else'", "'while'", 
                         "'break'", "'continue'" ];
	static symbolicNames = [ null, "COMMENT", "SPACE", "PLUS", "MINUS", "TIMES", 
                          "OVER", "REM", "OP_PAR", "CL_PAR", "ATTRIB", "COMMA", 
                          "OP_CUR", "CL_CUR", "EQ", "NE", "GT", "GE", "LT", 
                          "LE", "PRINT", "READ_INT", "READ_STR", "IF", "ELSE", 
                          "WHILE", "BREAK", "CONTINUE", "NUMBER", "NAME", 
                          "STRING" ];
	static ruleNames = [ "COMMENT", "SPACE", "PLUS", "MINUS", "TIMES", "OVER", 
                      "REM", "OP_PAR", "CL_PAR", "ATTRIB", "COMMA", "OP_CUR", 
                      "CL_CUR", "EQ", "NE", "GT", "GE", "LT", "LE", "PRINT", 
                      "READ_INT", "READ_STR", "IF", "ELSE", "WHILE", "BREAK", 
                      "CONTINUE", "NUMBER", "NAME", "STRING" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ExpLexer.EOF = antlr4.Token.EOF;
ExpLexer.COMMENT = 1;
ExpLexer.SPACE = 2;
ExpLexer.PLUS = 3;
ExpLexer.MINUS = 4;
ExpLexer.TIMES = 5;
ExpLexer.OVER = 6;
ExpLexer.REM = 7;
ExpLexer.OP_PAR = 8;
ExpLexer.CL_PAR = 9;
ExpLexer.ATTRIB = 10;
ExpLexer.COMMA = 11;
ExpLexer.OP_CUR = 12;
ExpLexer.CL_CUR = 13;
ExpLexer.EQ = 14;
ExpLexer.NE = 15;
ExpLexer.GT = 16;
ExpLexer.GE = 17;
ExpLexer.LT = 18;
ExpLexer.LE = 19;
ExpLexer.PRINT = 20;
ExpLexer.READ_INT = 21;
ExpLexer.READ_STR = 22;
ExpLexer.IF = 23;
ExpLexer.ELSE = 24;
ExpLexer.WHILE = 25;
ExpLexer.BREAK = 26;
ExpLexer.CONTINUE = 27;
ExpLexer.NUMBER = 28;
ExpLexer.NAME = 29;
ExpLexer.STRING = 30;



