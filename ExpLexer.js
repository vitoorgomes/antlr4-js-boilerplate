// Generated from Exp.g4 by ANTLR 4.9.1
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001e\u00a7\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0003\u0002",
    "\u0003\u0002\u0007\u0002>\n\u0002\f\u0002\u000e\u0002A\u000b\u0002\u0003",
    "\u0002\u0003\u0002\u0003\u0003\u0006\u0003F\n\u0003\r\u0003\u000e\u0003",
    "G\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003",
    "\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003",
    "\f\u0003\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003",
    "\u000f\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003",
    "\u0012\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0017\u0003",
    "\u0017\u0003\u0017\u0003\u0018\u0003\u0018\u0003\u0018\u0003\u0018\u0003",
    "\u0018\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0003",
    "\u0019\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003\u001a\u0003",
    "\u001a\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003",
    "\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001c\u0006\u001c\u009f",
    "\n\u001c\r\u001c\u000e\u001c\u00a0\u0003\u001d\u0006\u001d\u00a4\n\u001d",
    "\r\u001d\u000e\u001d\u00a5\u0002\u0002\u001e\u0003\u0003\u0005\u0004",
    "\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015",
    "\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013",
    "%\u0014\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d",
    "9\u001e\u0003\u0002\u0004\u0003\u0002\f\f\u0005\u0002\u000b\f\u000f",
    "\u000f\"\"\u0002\u00aa\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
    "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
    "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
    "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00023\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u0002",
    "7\u0003\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002\u0003;\u0003",
    "\u0002\u0002\u0002\u0005E\u0003\u0002\u0002\u0002\u0007K\u0003\u0002",
    "\u0002\u0002\tM\u0003\u0002\u0002\u0002\u000bO\u0003\u0002\u0002\u0002",
    "\rQ\u0003\u0002\u0002\u0002\u000fS\u0003\u0002\u0002\u0002\u0011U\u0003",
    "\u0002\u0002\u0002\u0013W\u0003\u0002\u0002\u0002\u0015Y\u0003\u0002",
    "\u0002\u0002\u0017[\u0003\u0002\u0002\u0002\u0019]\u0003\u0002\u0002",
    "\u0002\u001b_\u0003\u0002\u0002\u0002\u001da\u0003\u0002\u0002\u0002",
    "\u001fd\u0003\u0002\u0002\u0002!g\u0003\u0002\u0002\u0002#i\u0003\u0002",
    "\u0002\u0002%l\u0003\u0002\u0002\u0002\'n\u0003\u0002\u0002\u0002)q",
    "\u0003\u0002\u0002\u0002+w\u0003\u0002\u0002\u0002-\u0080\u0003\u0002",
    "\u0002\u0002/\u0083\u0003\u0002\u0002\u00021\u0088\u0003\u0002\u0002",
    "\u00023\u008e\u0003\u0002\u0002\u00025\u0094\u0003\u0002\u0002\u0002",
    "7\u009e\u0003\u0002\u0002\u00029\u00a3\u0003\u0002\u0002\u0002;?\u0007",
    "%\u0002\u0002<>\n\u0002\u0002\u0002=<\u0003\u0002\u0002\u0002>A\u0003",
    "\u0002\u0002\u0002?=\u0003\u0002\u0002\u0002?@\u0003\u0002\u0002\u0002",
    "@B\u0003\u0002\u0002\u0002A?\u0003\u0002\u0002\u0002BC\b\u0002\u0002",
    "\u0002C\u0004\u0003\u0002\u0002\u0002DF\t\u0003\u0002\u0002ED\u0003",
    "\u0002\u0002\u0002FG\u0003\u0002\u0002\u0002GE\u0003\u0002\u0002\u0002",
    "GH\u0003\u0002\u0002\u0002HI\u0003\u0002\u0002\u0002IJ\b\u0003\u0002",
    "\u0002J\u0006\u0003\u0002\u0002\u0002KL\u0007-\u0002\u0002L\b\u0003",
    "\u0002\u0002\u0002MN\u0007/\u0002\u0002N\n\u0003\u0002\u0002\u0002O",
    "P\u0007,\u0002\u0002P\f\u0003\u0002\u0002\u0002QR\u00071\u0002\u0002",
    "R\u000e\u0003\u0002\u0002\u0002ST\u0007\'\u0002\u0002T\u0010\u0003\u0002",
    "\u0002\u0002UV\u0007*\u0002\u0002V\u0012\u0003\u0002\u0002\u0002WX\u0007",
    "+\u0002\u0002X\u0014\u0003\u0002\u0002\u0002YZ\u0007?\u0002\u0002Z\u0016",
    "\u0003\u0002\u0002\u0002[\\\u0007.\u0002\u0002\\\u0018\u0003\u0002\u0002",
    "\u0002]^\u0007}\u0002\u0002^\u001a\u0003\u0002\u0002\u0002_`\u0007\u007f",
    "\u0002\u0002`\u001c\u0003\u0002\u0002\u0002ab\u0007?\u0002\u0002bc\u0007",
    "?\u0002\u0002c\u001e\u0003\u0002\u0002\u0002de\u0007#\u0002\u0002ef",
    "\u0007?\u0002\u0002f \u0003\u0002\u0002\u0002gh\u0007@\u0002\u0002h",
    "\"\u0003\u0002\u0002\u0002ij\u0007@\u0002\u0002jk\u0007?\u0002\u0002",
    "k$\u0003\u0002\u0002\u0002lm\u0007>\u0002\u0002m&\u0003\u0002\u0002",
    "\u0002no\u0007>\u0002\u0002op\u0007?\u0002\u0002p(\u0003\u0002\u0002",
    "\u0002qr\u0007r\u0002\u0002rs\u0007t\u0002\u0002st\u0007k\u0002\u0002",
    "tu\u0007p\u0002\u0002uv\u0007v\u0002\u0002v*\u0003\u0002\u0002\u0002",
    "wx\u0007t\u0002\u0002xy\u0007g\u0002\u0002yz\u0007c\u0002\u0002z{\u0007",
    "f\u0002\u0002{|\u0007a\u0002\u0002|}\u0007k\u0002\u0002}~\u0007p\u0002",
    "\u0002~\u007f\u0007v\u0002\u0002\u007f,\u0003\u0002\u0002\u0002\u0080",
    "\u0081\u0007k\u0002\u0002\u0081\u0082\u0007h\u0002\u0002\u0082.\u0003",
    "\u0002\u0002\u0002\u0083\u0084\u0007g\u0002\u0002\u0084\u0085\u0007",
    "n\u0002\u0002\u0085\u0086\u0007u\u0002\u0002\u0086\u0087\u0007g\u0002",
    "\u0002\u00870\u0003\u0002\u0002\u0002\u0088\u0089\u0007y\u0002\u0002",
    "\u0089\u008a\u0007j\u0002\u0002\u008a\u008b\u0007k\u0002\u0002\u008b",
    "\u008c\u0007n\u0002\u0002\u008c\u008d\u0007g\u0002\u0002\u008d2\u0003",
    "\u0002\u0002\u0002\u008e\u008f\u0007d\u0002\u0002\u008f\u0090\u0007",
    "t\u0002\u0002\u0090\u0091\u0007g\u0002\u0002\u0091\u0092\u0007c\u0002",
    "\u0002\u0092\u0093\u0007m\u0002\u0002\u00934\u0003\u0002\u0002\u0002",
    "\u0094\u0095\u0007e\u0002\u0002\u0095\u0096\u0007q\u0002\u0002\u0096",
    "\u0097\u0007p\u0002\u0002\u0097\u0098\u0007v\u0002\u0002\u0098\u0099",
    "\u0007k\u0002\u0002\u0099\u009a\u0007p\u0002\u0002\u009a\u009b\u0007",
    "w\u0002\u0002\u009b\u009c\u0007g\u0002\u0002\u009c6\u0003\u0002\u0002",
    "\u0002\u009d\u009f\u00042;\u0002\u009e\u009d\u0003\u0002\u0002\u0002",
    "\u009f\u00a0\u0003\u0002\u0002\u0002\u00a0\u009e\u0003\u0002\u0002\u0002",
    "\u00a0\u00a1\u0003\u0002\u0002\u0002\u00a18\u0003\u0002\u0002\u0002",
    "\u00a2\u00a4\u0004c|\u0002\u00a3\u00a2\u0003\u0002\u0002\u0002\u00a4",
    "\u00a5\u0003\u0002\u0002\u0002\u00a5\u00a3\u0003\u0002\u0002\u0002\u00a5",
    "\u00a6\u0003\u0002\u0002\u0002\u00a6:\u0003\u0002\u0002\u0002\u0007",
    "\u0002?G\u00a0\u00a5\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ExpLexer extends antlr4.Lexer {

    static grammarFileName = "Exp.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'+'", "'-'", "'*'", "'/'", "'%'", 
                         "'('", "')'", "'='", "','", "'{'", "'}'", "'=='", 
                         "'!='", "'>'", "'>='", "'<'", "'<='", "'print'", 
                         "'read_int'", "'if'", "'else'", "'while'", "'break'", 
                         "'continue'" ];
	static symbolicNames = [ null, "COMMENT", "SPACE", "PLUS", "MINUS", "TIMES", 
                          "OVER", "REM", "OP_PAR", "CL_PAR", "ATTRIB", "COMMA", 
                          "OP_CUR", "CL_CUR", "EQ", "NE", "GT", "GE", "LT", 
                          "LE", "PRINT", "READ_INT", "IF", "ELSE", "WHILE", 
                          "BREAK", "CONTINUE", "NUMBER", "NAME" ];
	static ruleNames = [ "COMMENT", "SPACE", "PLUS", "MINUS", "TIMES", "OVER", 
                      "REM", "OP_PAR", "CL_PAR", "ATTRIB", "COMMA", "OP_CUR", 
                      "CL_CUR", "EQ", "NE", "GT", "GE", "LT", "LE", "PRINT", 
                      "READ_INT", "IF", "ELSE", "WHILE", "BREAK", "CONTINUE", 
                      "NUMBER", "NAME" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ExpLexer.EOF = antlr4.Token.EOF;
ExpLexer.COMMENT = 1;
ExpLexer.SPACE = 2;
ExpLexer.PLUS = 3;
ExpLexer.MINUS = 4;
ExpLexer.TIMES = 5;
ExpLexer.OVER = 6;
ExpLexer.REM = 7;
ExpLexer.OP_PAR = 8;
ExpLexer.CL_PAR = 9;
ExpLexer.ATTRIB = 10;
ExpLexer.COMMA = 11;
ExpLexer.OP_CUR = 12;
ExpLexer.CL_CUR = 13;
ExpLexer.EQ = 14;
ExpLexer.NE = 15;
ExpLexer.GT = 16;
ExpLexer.GE = 17;
ExpLexer.LT = 18;
ExpLexer.LE = 19;
ExpLexer.PRINT = 20;
ExpLexer.READ_INT = 21;
ExpLexer.IF = 22;
ExpLexer.ELSE = 23;
ExpLexer.WHILE = 24;
ExpLexer.BREAK = 25;
ExpLexer.CONTINUE = 26;
ExpLexer.NUMBER = 27;
ExpLexer.NAME = 28;



