// Generated from Exp.g4 by ANTLR 4.9.1
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\u001a\u0085\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003",
    "\u0004\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007",
    "\t\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0003\u0002\u0003\u0002",
    "\u0007\u00026\n\u0002\f\u0002\u000e\u00029\u000b\u0002\u0003\u0002\u0003",
    "\u0002\u0003\u0003\u0006\u0003>\n\u0003\r\u0003\u000e\u0003?\u0003\u0003",
    "\u0003\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006",
    "\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t",
    "\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003",
    "\r\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003",
    "\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0003\u0012\u0003",
    "\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003",
    "\u0017\u0003\u0018\u0006\u0018}\n\u0018\r\u0018\u000e\u0018~\u0003\u0019",
    "\u0006\u0019\u0082\n\u0019\r\u0019\u000e\u0019\u0083\u0002\u0002\u001a",
    "\u0003\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t",
    "\u0011\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010",
    "\u001f\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018/\u0019",
    "1\u001a\u0003\u0002\u0004\u0003\u0002\f\f\u0005\u0002\u000b\f\u000f",
    "\u000f\"\"\u0002\u0088\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005",
    "\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t",
    "\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r",
    "\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011",
    "\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015",
    "\u0003\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019",
    "\u0003\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d",
    "\u0003\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!",
    "\u0003\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003",
    "\u0002\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002",
    "\u0002\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002",
    "\u0002\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002",
    "\u00033\u0003\u0002\u0002\u0002\u0005=\u0003\u0002\u0002\u0002\u0007",
    "C\u0003\u0002\u0002\u0002\tE\u0003\u0002\u0002\u0002\u000bG\u0003\u0002",
    "\u0002\u0002\rI\u0003\u0002\u0002\u0002\u000fK\u0003\u0002\u0002\u0002",
    "\u0011M\u0003\u0002\u0002\u0002\u0013O\u0003\u0002\u0002\u0002\u0015",
    "Q\u0003\u0002\u0002\u0002\u0017S\u0003\u0002\u0002\u0002\u0019U\u0003",
    "\u0002\u0002\u0002\u001bW\u0003\u0002\u0002\u0002\u001dY\u0003\u0002",
    "\u0002\u0002\u001f\\\u0003\u0002\u0002\u0002!_\u0003\u0002\u0002\u0002",
    "#a\u0003\u0002\u0002\u0002%d\u0003\u0002\u0002\u0002\'f\u0003\u0002",
    "\u0002\u0002)i\u0003\u0002\u0002\u0002+o\u0003\u0002\u0002\u0002-x\u0003",
    "\u0002\u0002\u0002/|\u0003\u0002\u0002\u00021\u0081\u0003\u0002\u0002",
    "\u000237\u0007%\u0002\u000246\n\u0002\u0002\u000254\u0003\u0002\u0002",
    "\u000269\u0003\u0002\u0002\u000275\u0003\u0002\u0002\u000278\u0003\u0002",
    "\u0002\u00028:\u0003\u0002\u0002\u000297\u0003\u0002\u0002\u0002:;\b",
    "\u0002\u0002\u0002;\u0004\u0003\u0002\u0002\u0002<>\t\u0003\u0002\u0002",
    "=<\u0003\u0002\u0002\u0002>?\u0003\u0002\u0002\u0002?=\u0003\u0002\u0002",
    "\u0002?@\u0003\u0002\u0002\u0002@A\u0003\u0002\u0002\u0002AB\b\u0003",
    "\u0002\u0002B\u0006\u0003\u0002\u0002\u0002CD\u0007-\u0002\u0002D\b",
    "\u0003\u0002\u0002\u0002EF\u0007/\u0002\u0002F\n\u0003\u0002\u0002\u0002",
    "GH\u0007,\u0002\u0002H\f\u0003\u0002\u0002\u0002IJ\u00071\u0002\u0002",
    "J\u000e\u0003\u0002\u0002\u0002KL\u0007\'\u0002\u0002L\u0010\u0003\u0002",
    "\u0002\u0002MN\u0007*\u0002\u0002N\u0012\u0003\u0002\u0002\u0002OP\u0007",
    "+\u0002\u0002P\u0014\u0003\u0002\u0002\u0002QR\u0007?\u0002\u0002R\u0016",
    "\u0003\u0002\u0002\u0002ST\u0007.\u0002\u0002T\u0018\u0003\u0002\u0002",
    "\u0002UV\u0007}\u0002\u0002V\u001a\u0003\u0002\u0002\u0002WX\u0007\u007f",
    "\u0002\u0002X\u001c\u0003\u0002\u0002\u0002YZ\u0007?\u0002\u0002Z[\u0007",
    "?\u0002\u0002[\u001e\u0003\u0002\u0002\u0002\\]\u0007#\u0002\u0002]",
    "^\u0007?\u0002\u0002^ \u0003\u0002\u0002\u0002_`\u0007@\u0002\u0002",
    "`\"\u0003\u0002\u0002\u0002ab\u0007@\u0002\u0002bc\u0007?\u0002\u0002",
    "c$\u0003\u0002\u0002\u0002de\u0007>\u0002\u0002e&\u0003\u0002\u0002",
    "\u0002fg\u0007>\u0002\u0002gh\u0007?\u0002\u0002h(\u0003\u0002\u0002",
    "\u0002ij\u0007r\u0002\u0002jk\u0007t\u0002\u0002kl\u0007k\u0002\u0002",
    "lm\u0007p\u0002\u0002mn\u0007v\u0002\u0002n*\u0003\u0002\u0002\u0002",
    "op\u0007t\u0002\u0002pq\u0007g\u0002\u0002qr\u0007c\u0002\u0002rs\u0007",
    "f\u0002\u0002st\u0007a\u0002\u0002tu\u0007k\u0002\u0002uv\u0007p\u0002",
    "\u0002vw\u0007v\u0002\u0002w,\u0003\u0002\u0002\u0002xy\u0007k\u0002",
    "\u0002yz\u0007h\u0002\u0002z.\u0003\u0002\u0002\u0002{}\u00042;\u0002",
    "|{\u0003\u0002\u0002\u0002}~\u0003\u0002\u0002\u0002~|\u0003\u0002\u0002",
    "\u0002~\u007f\u0003\u0002\u0002\u0002\u007f0\u0003\u0002\u0002\u0002",
    "\u0080\u0082\u0004c|\u0002\u0081\u0080\u0003\u0002\u0002\u0002\u0082",
    "\u0083\u0003\u0002\u0002\u0002\u0083\u0081\u0003\u0002\u0002\u0002\u0083",
    "\u0084\u0003\u0002\u0002\u0002\u00842\u0003\u0002\u0002\u0002\u0007",
    "\u00027?~\u0083\u0003\b\u0002\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class ExpLexer extends antlr4.Lexer {

    static grammarFileName = "Exp.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, null, null, "'+'", "'-'", "'*'", "'/'", "'%'", 
                         "'('", "')'", "'='", "','", "'{'", "'}'", "'=='", 
                         "'!='", "'>'", "'>='", "'<'", "'<='", "'print'", 
                         "'read_int'", "'if'" ];
	static symbolicNames = [ null, "COMMENT", "SPACE", "PLUS", "MINUS", "TIMES", 
                          "OVER", "REM", "OP_PAR", "CL_PAR", "ATTRIB", "COMMA", 
                          "OP_CUR", "CL_CUR", "EQ", "NE", "GT", "GE", "LT", 
                          "LE", "PRINT", "READ_INT", "IF", "NUMBER", "NAME" ];
	static ruleNames = [ "COMMENT", "SPACE", "PLUS", "MINUS", "TIMES", "OVER", 
                      "REM", "OP_PAR", "CL_PAR", "ATTRIB", "COMMA", "OP_CUR", 
                      "CL_CUR", "EQ", "NE", "GT", "GE", "LT", "LE", "PRINT", 
                      "READ_INT", "IF", "NUMBER", "NAME" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

ExpLexer.EOF = antlr4.Token.EOF;
ExpLexer.COMMENT = 1;
ExpLexer.SPACE = 2;
ExpLexer.PLUS = 3;
ExpLexer.MINUS = 4;
ExpLexer.TIMES = 5;
ExpLexer.OVER = 6;
ExpLexer.REM = 7;
ExpLexer.OP_PAR = 8;
ExpLexer.CL_PAR = 9;
ExpLexer.ATTRIB = 10;
ExpLexer.COMMA = 11;
ExpLexer.OP_CUR = 12;
ExpLexer.CL_CUR = 13;
ExpLexer.EQ = 14;
ExpLexer.NE = 15;
ExpLexer.GT = 16;
ExpLexer.GE = 17;
ExpLexer.LT = 18;
ExpLexer.LE = 19;
ExpLexer.PRINT = 20;
ExpLexer.READ_INT = 21;
ExpLexer.IF = 22;
ExpLexer.NUMBER = 23;
ExpLexer.NAME = 24;



